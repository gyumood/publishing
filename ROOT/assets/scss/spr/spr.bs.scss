// SCSS variables are information about icon's compiled state, stored under its original file name
//
// .icon-home {
//   width: $icon-home-width;
// }
//
// The large array-like variables contain all information about a single icon
// $icon-home: x y offset_x offset_y width height total_width total_height image_path;
//
// At the bottom of this section, we provide information about the spritesheet itself
// $spritesheet: width height image $spritesheet-sprites;
$bs-close-name: 'bs-close';
$bs-close-x: 0px;
$bs-close-y: 0px;
$bs-close-offset-x: 0px;
$bs-close-offset-y: 0px;
$bs-close-width: 32px;
$bs-close-height: 28px;
$bs-close-total-width: 62px;
$bs-close-total-height: 48px;
$bs-close-image: '/images/spr/spr_bs.png?181108066';
$bs-close: (0px, 0px, 0px, 0px, 32px, 28px, 62px, 48px, '/images/spr/spr_bs.png?181108066', 'bs-close', );
$bs-dropdown-name: 'bs-dropdown';
$bs-dropdown-x: 14px;
$bs-dropdown-y: 28px;
$bs-dropdown-offset-x: -14px;
$bs-dropdown-offset-y: -28px;
$bs-dropdown-width: 20px;
$bs-dropdown-height: 12px;
$bs-dropdown-total-width: 62px;
$bs-dropdown-total-height: 48px;
$bs-dropdown-image: '/images/spr/spr_bs.png?181108066';
$bs-dropdown: (14px, 28px, -14px, -28px, 20px, 12px, 62px, 48px, '/images/spr/spr_bs.png?181108066', 'bs-dropdown', );
$bs-kakao-name: 'bs-kakao';
$bs-kakao-x: 32px;
$bs-kakao-y: 0px;
$bs-kakao-offset-x: -32px;
$bs-kakao-offset-y: 0px;
$bs-kakao-width: 22px;
$bs-kakao-height: 20px;
$bs-kakao-total-width: 62px;
$bs-kakao-total-height: 48px;
$bs-kakao-image: '/images/spr/spr_bs.png?181108066';
$bs-kakao: (32px, 0px, -32px, 0px, 22px, 20px, 62px, 48px, '/images/spr/spr_bs.png?181108066', 'bs-kakao', );
$bs-right-s-name: 'bs-right-s';
$bs-right-s-x: 54px;
$bs-right-s-y: 0px;
$bs-right-s-offset-x: -54px;
$bs-right-s-offset-y: 0px;
$bs-right-s-width: 8px;
$bs-right-s-height: 16px;
$bs-right-s-total-width: 62px;
$bs-right-s-total-height: 48px;
$bs-right-s-image: '/images/spr/spr_bs.png?181108066';
$bs-right-s: (54px, 0px, -54px, 0px, 8px, 16px, 62px, 48px, '/images/spr/spr_bs.png?181108066', 'bs-right-s', );
$bs-right-name: 'bs-right';
$bs-right-x: 0px;
$bs-right-y: 28px;
$bs-right-offset-x: 0px;
$bs-right-offset-y: -28px;
$bs-right-width: 14px;
$bs-right-height: 20px;
$bs-right-total-width: 62px;
$bs-right-total-height: 48px;
$bs-right-image: '/images/spr/spr_bs.png?181108066';
$bs-right: (0px, 28px, 0px, -28px, 14px, 20px, 62px, 48px, '/images/spr/spr_bs.png?181108066', 'bs-right', );
$spritesheet-width: 62px;
$spritesheet-height: 48px;
$spritesheet-image: '/images/spr/spr_bs.png?181108066';
$spritesheet-sprites: ($bs-close, $bs-dropdown, $bs-kakao, $bs-right-s, $bs-right, );
$spritesheet: (62px, 48px, '/images/spr/spr_bs.png?181108066', $spritesheet-sprites, );

// The provided mixins are intended to be used with the array-like variables
//
// .icon-home {
//   @include sprite-width($icon-home);
// }
//
// .icon-email {
//   @include sprite($icon-email);
// }
//
// Example usage in HTML:
//
// `display: block` sprite:
// <div class="icon-home"></div>
//
// To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:
//
// // CSS
// .icon {
//   display: inline-block;
// }
//
// // HTML
// <i class="icon icon-home"></i>
@mixin sprite-width($sprite) {
  width: nth($sprite, 5);
}

@mixin sprite-height($sprite) {
  height: nth($sprite, 6);
}

@mixin sprite-position($sprite) {
  $sprite-offset-x: nth($sprite, 3);
  $sprite-offset-y: nth($sprite, 4);
  background-position: $sprite-offset-x  $sprite-offset-y;
}

@mixin sprite-image($sprite) {
  $sprite-image: nth($sprite, 9);
  background-image: url(#{$sprite-image});
}

@mixin sprite($sprite) {
  @include sprite-image($sprite);
  @include sprite-position($sprite);
  @include sprite-width($sprite);
  @include sprite-height($sprite);
}

// The `sprites` mixin generates identical output to the CSS template
//   but can be overridden inside of SCSS
//
// @include sprites($spritesheet-sprites);
@mixin sprites($sprites) {
  @each $sprite in $sprites {
    $sprite-name: nth($sprite, 10);
    .#{$sprite-name} {
      @include sprite($sprite);
    }
  }
}
